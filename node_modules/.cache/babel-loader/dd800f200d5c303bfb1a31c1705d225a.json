{"ast":null,"code":"import axios from 'axios';\nimport MovieCard from './components/MovieCard.vue';\nexport default {\n  name: 'App',\n\n  data() {\n    return {\n      title: [],\n      type: [],\n      year: [],\n      poster: [],\n      search: ''\n    };\n  },\n\n  methods: {\n    searchresultshow(search) {\n      if (search !== '') {\n        //검색어를 입력한 경우\n        this.$router.push({\n          name: \"SearchPage\",\n          params: {\n            search: this.search,\n            isResultShow: true\n          }\n        });\n        this.search = '';\n        console.log('\"', search, '\"' + ' 검색');\n      } else {\n        alert('검색어를 입력해주세요!'); //검색어를 입력하지 않은 경우\n      }\n    }\n\n  },\n\n  created() {\n    const apiKey = 'fac1af98';\n    const id = 'tt3896198';\n    let mtitle = 'frozen';\n    let titlebox = this.title;\n    let imgbox = this.poster;\n    let typebox = this.type;\n    let yearbox = this.year;\n    axios.get(`http://www.omdbapi.com/?i=${id}&apikey=${apiKey}&s=${mtitle}`).then(결과 => {\n      for (let i = 0; i < 결과.data.Search.length; i++) {\n        titlebox.push(결과.data.Search[i].Title); // 영화 제목\n\n        typebox.push(결과.data.Search[i].Type); // 영화 출시일\n\n        yearbox.push(결과.data.Search[i].Year); // 영화 장르\n\n        imgbox.push(결과.data.Search[i].Poster); // 영화 포스터\n      }\n\n      console.log(결과);\n      console.log(this.title);\n    });\n  },\n\n  components: {\n    MovieCard\n  }\n};","map":{"version":3,"mappings":"AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,eAAe;EAEbC,IAAI,EAAE,KAFO;;EAGbC,IAAI,GAAE;IACN,OAAO;MACFC,KAAI,EAAI,EADN;MAEFC,IAAG,EAAI,EAFL;MAGFC,IAAG,EAAI,EAHL;MAIFC,MAAK,EAAI,EAJP;MAKFC,MAAK,EAAI;IALP,CAAP;EAQC,CAZY;;EAabC,OAAO,EAAC;IACNC,gBAAgB,CAACF,MAAD,EAAS;MACvB,IAAIA,MAAK,KAAM,EAAf,EAAkB;QAAE;QAClB,KAAKG,OAAL,CAAaC,IAAb,CAAkB;UAChBV,IAAI,EAAE,YADU;UAEhBW,MAAM,EAAE;YACNL,MAAM,EAAE,KAAKA,MADP;YAENM,YAAY,EAAE;UAFR;QAFQ,CAAlB;QAOA,KAAKN,MAAL,GAAc,EAAd;QACAO,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBR,MAAhB,EAAuB,MAAM,KAA7B;MACF,CAVA,MAUO;QACLS,KAAK,CAAC,cAAD,CAAL,CADK,CACkB;MACzB;IACF;;EAfM,CAbK;;EA8BbC,OAAO,GAAE;IACP,MAAMC,MAAK,GAAI,UAAf;IACA,MAAMC,EAAC,GAAI,WAAX;IACA,IAAIC,MAAK,GAAI,QAAb;IACJ,IAAIC,QAAO,GAAI,KAAKlB,KAApB;IACA,IAAImB,MAAK,GAAI,KAAKhB,MAAlB;IACA,IAAIiB,OAAM,GAAI,KAAKnB,IAAnB;IACA,IAAIoB,OAAM,GAAI,KAAKnB,IAAnB;IACCN,KAAK,CAAC0B,GAAN,CAAW,6BAA4BN,EAAG,WAAUD,MAAO,MAAKE,MAAO,EAAvE,EAA0EM,IAA1E,CAAgFC,EAAC,IAAK;MACpF,KAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAID,EAAE,CAACzB,IAAH,CAAQ2B,MAAR,CAAeC,MAAlC,EAA0CF,CAAC,EAA3C,EAA8C;QAC/CP,QAAQ,CAACV,IAAT,CAAcgB,EAAE,CAACzB,IAAH,CAAQ2B,MAAR,CAAeD,CAAf,EAAkBG,KAAhC,EAD+C,CACR;;QACvCR,OAAO,CAACZ,IAAR,CAAagB,EAAE,CAACzB,IAAH,CAAQ2B,MAAR,CAAeD,CAAf,EAAkBI,IAA/B,EAF+C,CAET;;QACtCR,OAAO,CAACb,IAAR,CAAagB,EAAE,CAACzB,IAAH,CAAQ2B,MAAR,CAAeD,CAAf,EAAkBK,IAA/B,EAH+C,CAGT;;QACtCX,MAAM,CAACX,IAAP,CAAYgB,EAAE,CAACzB,IAAH,CAAQ2B,MAAR,CAAeD,CAAf,EAAkBM,MAA9B,EAJ+C,CAIT;MAGtC;;MACEpB,OAAO,CAACC,GAAR,CAAYY,EAAZ;MACAb,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;IACD,CAXF;EAYE,CAlDY;;EAoDbgC,UAAU,EAAE;IACVnC;EADU;AApDC,CAAf","names":["axios","MovieCard","name","data","title","type","year","poster","search","methods","searchresultshow","$router","push","params","isResultShow","console","log","alert","created","apiKey","id","mtitle","titlebox","imgbox","typebox","yearbox","get","then","결과","i","Search","length","Title","Type","Year","Poster","components"],"sourceRoot":"","sources":["/Users/hoyeon/Desktop/vueMovie/vuemovie/src/App.vue"],"sourcesContent":["<template>\n <div>\n   \n <input\n      class=\"form-control\"\n      type=\"text\"\n      v-model=\"search\"\n      placeholder=\"검색\"\n    />\n\n   <MovieCard v-for=\"(a,i) in title.length\" :key=\"i\" :type=\"type[i]\" :year=\"year[i]\" :title=\"title[i]\" :poster=\"poster[i]\"/>\n    \n   \n \n  </div>\n</template>\n\n<script> \nimport axios from 'axios'\nimport MovieCard from './components/MovieCard.vue'\n\nexport default {\n  \n  name: 'App',\n  data(){\n  return {\n       title : [],\n       type : [],\n       year : [],\n       poster : [],\n       search : ''\n  }\n \n  },\n  methods:{\n    searchresultshow(search) {\n      if (search !== ''){ //검색어를 입력한 경우\n        this.$router.push({\n          name: \"SearchPage\",\n          params: {\n            search: this.search,\n            isResultShow: true,\n          },\n        });\n        this.search = ''\n        console.log('\"',search,'\"' + ' 검색')\n      } else {\n        alert('검색어를 입력해주세요!')  //검색어를 입력하지 않은 경우\n      }\n    }\n  },\n  created(){\n    const apiKey = 'fac1af98'\n    const id = 'tt3896198'\n    let mtitle = 'frozen';\nlet titlebox = this.title;\nlet imgbox = this.poster;\nlet typebox = this.type;\nlet yearbox = this.year;\n axios.get(`http://www.omdbapi.com/?i=${id}&apikey=${apiKey}&s=${mtitle}`).then( 결과 => {\n   for(let i = 0; i < 결과.data.Search.length; i++){\n  titlebox.push(결과.data.Search[i].Title) // 영화 제목\n  typebox.push(결과.data.Search[i].Type); // 영화 출시일\n  yearbox.push(결과.data.Search[i].Year); // 영화 장르\n  imgbox.push(결과.data.Search[i].Poster) // 영화 포스터\n\n \n  }\n    console.log(결과)\n    console.log(this.title)\n  })\n  },\n  \n  components: { \n    MovieCard\n    },\n \n}\n \n\n\n  \n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}